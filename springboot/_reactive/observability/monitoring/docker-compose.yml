version: '3.7'
networks:
  grafananet:

services:
   prometheus:
     image: prom/prometheus:latest
     container_name: prometheus
     ports:
       - "9091:9091"
     volumes:
       - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
     networks:
       - grafananet
    
   promtail:
     image: grafana/promtail:latest
     container_name: promtail
     volumes:
       - /tmp/spring-boot/logs:/var/log/
       - ./promtail/promtail.yml:/etc/promtail/promtail.yml
     networks:
       - grafananet

   loki:
     image: grafana/loki:latest
     container_name: loki
     ports:
       - "3100:3100"
     volumes:
       - ./loki:/etc/loki/
     command: -config.file=/etc/loki/loki.yml
     environment:
       - JAEGER_AGENT_HOST=tempo
       - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
       - JAEGER_SAMPLER_TYPE=const
       - JAEGER_SAMPLER_PARAM=1
     networks:
       - grafananet

#   mimir:
#     image: grafana/mimir:latest
#     container_name: mimir
#     ports:
#       - "9009:9009"
#     volumes:
#       - ./mimir:/etc/mimir/
#     command: -config.file=/etc/mimir/demo.yml
#     networks:
#       - grafananet
#
#   tempo:
#     image: grafana/tempo
#     extra_hosts: ['host.docker.internal:host-gateway']
#     command: [ "-config.file=/etc/tempo.yaml" ]
#     volumes:
#       - ./tempo/tempo.yaml:/etc/tempo.yaml:ro
#       - ./tempo-data:/tmp/tempo
#     ports:
#       - "14268"  # jaeger ingest
#       - "9411:9411" # zipkin
#     networks:
#       - grafananet


#   tempo:
#     image: grafana/tempo:latest
#     command: [ "-config.file=/etc/tempo.yaml" ]
#     volumes:
#       - ./tempo/tempo.yaml:/etc/tempo.yaml
#       - ./tempo-data:/var/tempo
#     ports:
#       - "14268:14268"  # jaeger ingest
#       - "3200:3200"   # tempo
#       - "9095:9095" # tempo grpc
#       - "4317:4317"  # otlp grpc
#       - "4318:4318"  # otlp http
#       - "9411:9411"   # zipkin
#     networks:
#       - grafananet

#   k6-tracing:
#     image: ghcr.io/grafana/xk6-client-tracing:latest
#     environment:
#       - ENDPOINT=tempo:4317
#     restart: always
#     depends_on:
#       - tempo

   grafana:
     image: grafana/grafana:latest
     container_name: grafana
     ports:
       - "3000:3000"
     restart: unless-stopped
     volumes:
       - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
       - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
     environment:
       - GF_AUTH_ANONYMOUS_ENABLED=true
       - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
       - GF_AUTH_DISABLE_LOGIN_FORM=true
     networks:
       - grafananet

#  grafana:
#    image: grafana/grafana-enterprise:latest
#    container_name: grafana-infiniy
#    platform: linux/amd64
#    ports:
#      - "3000:3000"
#    restart: unless-stopped
#    volumes:
#      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
#    environment:
#      - TERM=linux
#      - GF_DEFAULT_APP_MODE=development
#      - GF_AUTH_ANONYMOUS_ENABLED=true
#      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#      - GF_SECURITY_ADMIN_USER=infinity
#      - GF_SECURITY_ADMIN_PASSWORD=infinity
#      - GF_SECURITY_ANGULAR_SUPPORT_ENABLED=false
#      - GF_SECURITY_CSRF_ALWAYS_CHECK=true
#      - GF_ENTERPRISE_LICENSE_TEXT=$GF_ENTERPRISE_LICENSE_TEXT
#      - GF_INSTALL_PLUGINS=https://github.com/grafana/grafana-infinity-datasource/releases/download/v2.4.0/yesoreyeram-infinity-datasource-2.4.0.zip;yesoreyeram-infinity-datasource
#    networks:
#      - grafananet